name: Deploy to AWS ECS

on:
  push:
    branches:
      - main  # Triggers the workflow on a push to the main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up AWS credentials using secrets
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Step 3: Log in to Amazon ECR
      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.ECR_REGISTRY }}

      # Step 4: Build the Docker image
      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.ECR_REPOSITORY }} .
          docker tag ${{ secrets.ECR_REPOSITORY }}:${{ github.sha }} ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:${{ github.sha }}

      # Step 5: Push the Docker image to ECR
      - name: Push Docker image to ECR
        run: |
          docker push ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:${{ github.sha }}

      # Step 6: Deploy to ECS
      - name: Deploy to ECS
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          # Fetch the current task definition
          TASK_FAMILY=$(aws ecs describe-task-definition --task-definition ${{ secrets.ECS_SERVICE }} | jq -r '.taskDefinition.family')
          CONTAINER_DEFINITIONS=$(aws ecs describe-task-definition --task-definition ${{ secrets.ECS_SERVICE }} | jq -r '.taskDefinition.containerDefinitions')

          # Update the container image with the new image from ECR
          NEW_CONTAINER_DEFINITIONS=$(echo $CONTAINER_DEFINITIONS | sed -e "s|${{ secrets.ECR_REGISTRY }}/.*:.*|${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:${{ github.sha }}|g")

          # Register the new task definition
          aws ecs register-task-definition \
            --family $TASK_FAMILY \
            --container-definitions "$NEW_CONTAINER_DEFINITIONS"

          # Update ECS service to use the new task definition
          aws ecs update-service \
            --cluster ${{ secrets.ECS_CLUSTER }} \
            --service ${{ secrets.ECS_SERVICE }} \
            --force-new-deployment
